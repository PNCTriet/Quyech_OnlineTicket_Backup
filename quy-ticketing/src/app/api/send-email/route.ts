import { Resend } from 'resend';
import { NextResponse } from 'next/server';

// Define the ticket type inline to avoid import issues
type TicketWithQuantity = {
  id: string;
  name: string;
  price: number;
  color: string;
  quantity: number;
  sold: number;
  label?: string;
  status: string;
};

export async function POST(request: Request) {
  try {
    // Debug: Check if API key is loaded
    console.log('üîë API Key loaded:', process.env.RESEND_API_KEY ? 'Yes' : 'No');
    console.log('üîë API Key value:', process.env.RESEND_API_KEY ? `${process.env.RESEND_API_KEY.substring(0, 10)}...` : 'Not found');
    
    // Initialize Resend inside the function to ensure env vars are loaded
    const resend = new Resend(process.env.RESEND_API_KEY);
    
    const { to, subject, tickets, customerInfo, orderNumber, orderDate, orderTime, totalAmount } = await request.json();
    
    // T·∫°o HTML template cho email v√© ƒëi·ªán t·ª≠
    const htmlContent = `
      <!DOCTYPE html>
      <html>
      <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>V√© ƒëi·ªán t·ª≠ ·ªöt Cay X√®</title>
        <style>
          body { 
            font-family: 'Inter', Arial, sans-serif; 
            margin: 0; 
            padding: 0; 
            background-color: #f4f4f4; 
            line-height: 1.6;
          }
          .container { 
            max-width: 600px; 
            margin: 0 auto; 
            background-color: #ffffff; 
            border-radius: 10px; 
            overflow: hidden; 
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); 
          }
          .header { 
            background: linear-gradient(135deg, #2A6FB0 0%, #ff6b35 100%); 
            color: white; 
            padding: 30px; 
            text-align: center; 
          }
          .header h1 { 
            margin: 0; 
            font-size: 28px; 
            font-weight: 800; 
          }
          .content { 
            padding: 30px; 
          }
          .intro-text {
            background-color: #fff3cd;
            border-radius: 8px;
            padding: 20px;
            margin: 20px 0;
            border-left: 4px solid #2A6FB0;
          }
          .ticket-info { 
            background-color: #f8f9fa; 
            border-radius: 8px; 
            padding: 20px; 
            margin: 20px 0; 
            border: 2px solid #2A6FB0;
          }
          .ticket-item { 
            display: flex; 
            justify-content: space-between; 
            align-items: center; 
            padding: 10px 0; 
            border-bottom: 1px solid #e9ecef; 
          }
          .ticket-item:last-child { 
            border-bottom: none; 
          }
          .total { 
            font-weight: bold; 
            font-size: 18px; 
            color: #2A6FB0; 
            text-align: right; 
            margin-top: 20px; 
            padding-top: 20px; 
            border-top: 2px solid #2A6FB0; 
          }
          .customer-info { 
            background-color: #e8f4fd; 
            border-radius: 8px; 
            padding: 20px; 
            margin: 20px 0; 
          }
          .order-details { 
            background-color: #fff3cd; 
            border-radius: 8px; 
            padding: 20px; 
            margin: 20px 0; 
          }
          .terms { 
            background-color: #f8d7da; 
            border-radius: 8px; 
            padding: 20px; 
            margin: 20px 0; 
            border-left: 4px solid #dc3545;
          }
          .contact-info {
            background-color: #d1ecf1;
            border-radius: 8px;
            padding: 20px;
            margin: 20px 0;
            border-left: 4px solid #17a2b8;
          }
          .footer { 
            background-color: #343a40; 
            color: white; 
            text-align: center; 
            padding: 20px; 
            font-size: 14px; 
          }
          .qr-code { 
            text-align: center; 
            margin: 20px 0; 
          }
          .qr-code img { 
            width: 150px; 
            height: 150px; 
            border: 2px solid #2A6FB0; 
            border-radius: 8px; 
          }
          .event-details {
            background-color: #d4edda;
            border-radius: 8px;
            padding: 20px;
            margin: 20px 0;
            border-left: 4px solid #28a745;
          }
          .highlight {
            color: #2A6FB0;
            font-weight: bold;
          }
        </style>
      </head>
      <body>
        <div class="container">
          <div class="header">
            <h1>üé´ V√© ƒëi·ªán t·ª≠ ·ªöt Cay X√®</h1>
            <p>Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi ƒë√™m nh·∫°c!</p>
          </div>
          
          <div class="content">
            <div class="intro-text">
              <p><strong>·ªöt Cay X√®</strong> xin ƒë∆∞·ª£c g·ª≠i t·∫∑ng b·∫°n v√© ƒë√™m nh·∫°c nh√©, mong b·∫°n s·∫Ω c√≥ nh·ªØng ph√∫t gi√¢y vui v·∫ª nh·∫•t khi t·∫≠n h∆∞·ªüng √¢m nh·∫°c c√πng b·∫°n b√® v√† ng∆∞·ªùi th√¢n.</p>
              <p>Vui l√≤ng ki·ªÉm tra th√¥ng tin v√† chu·∫©n b·ªã s·∫µn v√© t·∫°i n∆°i so√°t v√©.</p>
            </div>
            
            <div class="order-details">
              <h3>üìã Th√¥ng tin ƒë∆°n h√†ng</h3>
              <p><strong>M√£ ƒë∆°n h√†ng:</strong> #${orderNumber}</p>
              <p><strong>Ng√†y ƒë·∫∑t:</strong> ${orderDate} ${orderTime}</p>
            </div>
            
            <div class="customer-info">
              <h3>üë§ Th√¥ng tin kh√°ch h√†ng</h3>
              <p><strong>H·ªç t√™n:</strong> ${customerInfo.fullName}</p>
              <p><strong>Email:</strong> ${customerInfo.email}</p>
              <p><strong>S·ªë ƒëi·ªán tho·∫°i:</strong> ${customerInfo.phone}</p>
            </div>
            
            <div class="ticket-info">
              <h3>üé≠ TH√îNG TIN V√â</h3>
              ${tickets.map((ticket: TicketWithQuantity) => `
                <div class="ticket-item">
                  <div>
                    <strong>Lo·∫°i v√©:</strong> ${ticket.name}<br>
                    <small>M√£ v√©: ${ticket.id}</small>
                  </div>
                  <div>
                    <strong>S·ªë l∆∞·ª£ng: ${ticket.quantity}</strong><br>
                    <small>${ticket.price.toLocaleString()}ƒë/v√©</small>
                  </div>
                </div>
              `).join('')}
              <div class="total">
                <strong>T·ªïng c·ªông: ${totalAmount.toLocaleString()}ƒë</strong>
              </div>
            </div>
            
            <div class="event-details">
              <h3>üìÖ Th√¥ng tin s·ª± ki·ªán</h3>
              <p><strong>Th·ªùi gian:</strong> 17/10/2025</p>
              <p><strong>ƒê·ªãa ƒëi·ªÉm:</strong> Qu·∫≠n S√†i G√≤n</p>
              <p><strong>Lo·∫°i v√©:</strong> Single - 489.000ƒë/v√©</p>
            </div>
            
            <div class="terms">
              <h3>üìã ƒêi·ªÅu kho·∫£n v√† ƒëi·ªÅu ki·ªán</h3>
              <ul>
                <li>M·ªói v√© ch·ªâ d√†nh cho 1 (m·ªôt) ng∆∞·ªùi v√†o c·ª≠a.</li>
                <li>Ng∆∞·ªùi tham gia ph·∫£i tr√¨nh v√© ·ªü c·ª≠a ƒë·ªÉ v√†o s·ª± ki·ªán.</li>
                <li>Ng∆∞·ªùi nh·∫≠n v√© t·ª± ch·ªãu tr√°ch nhi·ªám b·∫£o m·∫≠t th√¥ng tin m√£ v√©.</li>
                <li>Kh√¥ng h·ªó tr·ª£ gi·ªØ ch·ªó d∆∞·ªõi m·ªçi h√¨nh th·ª©c.</li>
              </ul>
            </div>
            
            <div class="qr-code">
              <h3>üì± M√£ QR v√©</h3>
              <p>Qu√©t m√£ QR n√†y t·∫°i c·ª≠a v√†o ƒë·ªÉ ƒë∆∞·ª£c ki·ªÉm tra v√©</p>
              ${(() => {
                let qrCodes = '';
                let ticketCounter = 1;
                
                tickets.forEach((ticket: TicketWithQuantity) => {
                  for (let i = 0; i < ticket.quantity; i++) {
                    const ticketNumber = ticketCounter.toString().padStart(2, '0');
                    const qrData = `${orderNumber}-${ticketNumber}`;
                    qrCodes += `
                      <div style="margin-bottom: 20px; text-align: center;">
                        <p><strong>V√© ${ticketCounter}:</strong> ${ticket.name}</p>
                        <p><strong>M√£ v√©:</strong> ${qrData}</p>
                        <img src="https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=${qrData}" alt="QR Code ${ticketCounter}" />
                      </div>
                    `;
                    ticketCounter++;
                  }
                });
                
                return qrCodes;
              })()}
            </div>
            
            <div class="contact-info">
              <h3>üìû M·ªçi th·∫Øc m·∫Øc xin li√™n h·ªá</h3>
              <p><strong>üíå Email:</strong> otconcert@gmail.com</p>
              <p><strong>‚òéÔ∏è Phone:</strong> 0934782703 - Bora</p>
              <p><strong>‚ú® Fanpage:</strong> Fanpage ch∆∞∆°ng tr√¨nh</p>
            </div>
          </div>
          
          <div class="footer">
            <p>¬© 2024 ·ªöt Cay X√® - The destination of Indie music</p>
            <p>Follow ·ªöt Cay X√® ƒë·ªÉ c·∫≠p nh·∫≠t th√™m th√¥ng tin v·ªÅ ƒë√™m nh·∫°c nh√©!</p>
          </div>
        </div>
      </body>
      </html>
    `;

    const result = await resend.emails.send({
      from: '·ªöt Cay X√® <noreply@otcayxe.com>',
      to: [to],
      subject: subject,
      html: htmlContent,
    });

    console.log('üìß Email sent successfully:', result);
    return NextResponse.json({ success: true, data: result });
  } catch (error) {
    console.error('‚ùå Error sending email:', error);
    const errorMessage = error instanceof Error ? error.message : 'Unknown error occurred';
    return NextResponse.json({ success: false, error: errorMessage }, { status: 500 });
  }
} 